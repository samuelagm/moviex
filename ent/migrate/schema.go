// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CharactersColumns holds the columns for the "characters" table.
	CharactersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Default: "unknown"},
		{Name: "height", Type: field.TypeString},
		{Name: "mass", Type: field.TypeString},
		{Name: "hair_color", Type: field.TypeString},
		{Name: "skin_color", Type: field.TypeString},
		{Name: "eye_color", Type: field.TypeString},
		{Name: "birth_year", Type: field.TypeString},
		{Name: "gender", Type: field.TypeString},
		{Name: "films", Type: field.TypeJSON},
		{Name: "created", Type: field.TypeTime},
		{Name: "edited", Type: field.TypeTime},
		{Name: "url", Type: field.TypeString},
	}
	// CharactersTable holds the schema information for the "characters" table.
	CharactersTable = &schema.Table{
		Name:       "characters",
		Columns:    CharactersColumns,
		PrimaryKey: []*schema.Column{CharactersColumns[0]},
	}
	// CommentsColumns holds the columns for the "comments" table.
	CommentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "text", Type: field.TypeString, Size: 500},
		{Name: "ip", Type: field.TypeString},
		{Name: "created", Type: field.TypeTime},
		{Name: "movie_comments", Type: field.TypeInt, Nullable: true},
	}
	// CommentsTable holds the schema information for the "comments" table.
	CommentsTable = &schema.Table{
		Name:       "comments",
		Columns:    CommentsColumns,
		PrimaryKey: []*schema.Column{CommentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "comments_movies_comments",
				Columns:    []*schema.Column{CommentsColumns[5]},
				RefColumns: []*schema.Column{MoviesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MoviesColumns holds the columns for the "movies" table.
	MoviesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString, Default: "unknown"},
		{Name: "episode_id", Type: field.TypeInt},
		{Name: "opening_crawl", Type: field.TypeString, Default: ""},
		{Name: "director", Type: field.TypeString},
		{Name: "producer", Type: field.TypeString},
		{Name: "release_date", Type: field.TypeTime},
		{Name: "characters", Type: field.TypeJSON},
		{Name: "created", Type: field.TypeTime},
		{Name: "edited", Type: field.TypeTime},
		{Name: "url", Type: field.TypeString},
	}
	// MoviesTable holds the schema information for the "movies" table.
	MoviesTable = &schema.Table{
		Name:       "movies",
		Columns:    MoviesColumns,
		PrimaryKey: []*schema.Column{MoviesColumns[0]},
	}
	// MoviePeopleColumns holds the columns for the "movie_people" table.
	MoviePeopleColumns = []*schema.Column{
		{Name: "movie_id", Type: field.TypeInt},
		{Name: "character_id", Type: field.TypeInt},
	}
	// MoviePeopleTable holds the schema information for the "movie_people" table.
	MoviePeopleTable = &schema.Table{
		Name:       "movie_people",
		Columns:    MoviePeopleColumns,
		PrimaryKey: []*schema.Column{MoviePeopleColumns[0], MoviePeopleColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "movie_people_movie_id",
				Columns:    []*schema.Column{MoviePeopleColumns[0]},
				RefColumns: []*schema.Column{MoviesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "movie_people_character_id",
				Columns:    []*schema.Column{MoviePeopleColumns[1]},
				RefColumns: []*schema.Column{CharactersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CharactersTable,
		CommentsTable,
		MoviesTable,
		MoviePeopleTable,
	}
)

func init() {
	CommentsTable.ForeignKeys[0].RefTable = MoviesTable
	MoviePeopleTable.ForeignKeys[0].RefTable = MoviesTable
	MoviePeopleTable.ForeignKeys[1].RefTable = CharactersTable
}
