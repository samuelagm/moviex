// Code generated by ent, DO NOT EDIT.

package comment

const (
	// Label holds the string label denoting the comment type in the database.
	Label = "comment"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldText holds the string denoting the text field in the database.
	FieldText = "text"
	// FieldIP holds the string denoting the ip field in the database.
	FieldIP = "ip"
	// FieldCreated holds the string denoting the created field in the database.
	FieldCreated = "created"
	// FieldEdited holds the string denoting the edited field in the database.
	FieldEdited = "edited"
	// FieldURL holds the string denoting the url field in the database.
	FieldURL = "url"
	// EdgeFilm holds the string denoting the film edge name in mutations.
	EdgeFilm = "film"
	// Table holds the table name of the comment in the database.
	Table = "comments"
	// FilmTable is the table that holds the film relation/edge.
	FilmTable = "comments"
	// FilmInverseTable is the table name for the Movie entity.
	// It exists in this package in order to avoid circular dependency with the "movie" package.
	FilmInverseTable = "movies"
	// FilmColumn is the table column denoting the film relation/edge.
	FilmColumn = "movie_comments"
)

// Columns holds all SQL columns for comment fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldText,
	FieldIP,
	FieldCreated,
	FieldEdited,
	FieldURL,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "comments"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"movie_comments",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// TextValidator is a validator for the "text" field. It is called by the builders before save.
	TextValidator func(string) error
)
