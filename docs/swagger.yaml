definitions:
  types.Character:
    properties:
      birth_year:
        type: string
      created:
        type: string
      edited:
        type: string
      eye_color:
        type: string
      films:
        items:
          type: string
        type: array
      gender:
        type: string
      hair_color:
        type: string
      height:
        type: string
      mass:
        type: string
      name:
        type: string
      skin_color:
        type: string
      url:
        type: string
    type: object
  types.CharacterResponse:
    properties:
      characters:
        items:
          $ref: '#/definitions/types.Character'
        type: array
      metadata:
        properties:
          count:
            type: integer
          totalHeight:
            type: string
        type: object
    type: object
  types.Comment:
    properties:
      name:
        type: string
      text:
        type: string
    type: object
  types.CommentResponse:
    properties:
      created:
        type: string
      ip:
        type: string
      name:
        type: string
      text:
        type: string
    type: object
  types.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  types.FilmResponse:
    properties:
      characters:
        items:
          type: string
        type: array
      created:
        type: string
      director:
        type: string
      edited:
        type: string
      episode_id:
        type: integer
      opening_crawl:
        type: string
      producer:
        type: string
      release_date:
        type: string
      title:
        type: string
      url:
        type: string
    type: object
info:
  contact:
    email: samuelagm@gmail.com
    name: Samuel Agbonkpolo
  description: StarWars Movie Server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Movie API
  version: 0.0.2
paths:
  /characters/{episodeId}:
    get:
      consumes:
      - application/json
      description: Returns a list of all star wars characters in an episode
      parameters:
      - description: Episode ID
        in: path
        name: episodeId
        required: true
        type: integer
      - collectionFormat: multi
        description: sort by gender, height, name and directions asc, desc. E.g ?sort=gender
          asc, ?sort=name desc
        in: query
        items:
          type: string
        name: sort
        type: array
      - description: filter by gender, (male | female), e.g ?filter=male
        in: query
        name: filter
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.CharacterResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: list all characters in an episode
  /comment/{episodeId}:
    post:
      consumes:
      - application/json
      description: adds a comment to a movie
      parameters:
      - description: Episode ID
        in: path
        name: episodeId
        required: true
        type: integer
      - description: Add account
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/types.Comment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.CommentResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: creates a new comment
  /comments/{episodeId}:
    get:
      consumes:
      - application/json
      description: Returns a list of comments from a movie by episode Id
      parameters:
      - description: Episode ID
        in: path
        name: episodeId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.CommentResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: list all comments from a movie
  /movies:
    get:
      consumes:
      - application/json
      description: Returns a list of all star wars movies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.FilmResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: list all movies
swagger: "2.0"
